// automatically generated by the FlatBuffers compiler, do not modify

package com.leegm.common.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Join extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Join getRootAsJoin(ByteBuffer _bb) { return getRootAsJoin(_bb, new Join()); }
  public static Join getRootAsJoin(ByteBuffer _bb, Join obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Join __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String userId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer userIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer userIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public long objectId() { int o = __offset(8); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }
  public com.leegm.common.protocol.Object objects(int j) { return objects(new com.leegm.common.protocol.Object(), j); }
  public com.leegm.common.protocol.Object objects(com.leegm.common.protocol.Object obj, int j) { int o = __offset(10); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int objectsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public com.leegm.common.protocol.Object.Vector objectsVector() { return objectsVector(new com.leegm.common.protocol.Object.Vector()); }
  public com.leegm.common.protocol.Object.Vector objectsVector(com.leegm.common.protocol.Object.Vector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createJoin(FlatBufferBuilder builder,
      int userIdOffset,
      int nameOffset,
      long objectId,
      int objectsOffset) {
    builder.startTable(4);
    Join.addObjects(builder, objectsOffset);
    Join.addObjectId(builder, objectId);
    Join.addName(builder, nameOffset);
    Join.addUserId(builder, userIdOffset);
    return Join.endJoin(builder);
  }

  public static void startJoin(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addUserId(FlatBufferBuilder builder, int userIdOffset) { builder.addOffset(0, userIdOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addObjectId(FlatBufferBuilder builder, long objectId) { builder.addInt(2, (int)objectId, (int)0L); }
  public static void addObjects(FlatBufferBuilder builder, int objectsOffset) { builder.addOffset(3, objectsOffset, 0); }
  public static int createObjectsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startObjectsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endJoin(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Join get(int j) { return get(new Join(), j); }
    public Join get(Join obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

