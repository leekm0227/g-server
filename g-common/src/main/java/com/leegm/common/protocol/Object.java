// automatically generated by the FlatBuffers compiler, do not modify

package com.leegm.common.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Object extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Object getRootAsObject(ByteBuffer _bb) { return getRootAsObject(_bb, new Object()); }
  public static Object getRootAsObject(ByteBuffer _bb, Object obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Object __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String objectId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer objectIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer objectIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public byte type() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte state() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public com.leegm.common.protocol.Vec3 position() { return position(new com.leegm.common.protocol.Vec3()); }
  public com.leegm.common.protocol.Vec3 position(com.leegm.common.protocol.Vec3 obj) { int o = __offset(12); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.leegm.common.protocol.Vec3 direction() { return direction(new com.leegm.common.protocol.Vec3()); }
  public com.leegm.common.protocol.Vec3 direction(com.leegm.common.protocol.Vec3 obj) { int o = __offset(14); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public float attackSpeed() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float moveSpeed() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static void startObject(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addObjectId(FlatBufferBuilder builder, int objectIdOffset) { builder.addOffset(0, objectIdOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(2, type, 0); }
  public static void addState(FlatBufferBuilder builder, byte state) { builder.addByte(3, state, 0); }
  public static void addPosition(FlatBufferBuilder builder, int positionOffset) { builder.addStruct(4, positionOffset, 0); }
  public static void addDirection(FlatBufferBuilder builder, int directionOffset) { builder.addStruct(5, directionOffset, 0); }
  public static void addAttackSpeed(FlatBufferBuilder builder, float attackSpeed) { builder.addFloat(6, attackSpeed, 0.0f); }
  public static void addMoveSpeed(FlatBufferBuilder builder, float moveSpeed) { builder.addFloat(7, moveSpeed, 0.0f); }
  public static int endObject(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Object get(int j) { return get(new Object(), j); }
    public Object get(Object obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

