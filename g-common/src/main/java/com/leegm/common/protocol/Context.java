// automatically generated by the FlatBuffers compiler, do not modify

package com.leegm.common.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Context extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Context getRootAsContext(ByteBuffer _bb) { return getRootAsContext(_bb, new Context()); }
  public static Context getRootAsContext(ByteBuffer _bb, Context obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Context __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String userId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer userIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer userIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String sessionId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sessionIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer sessionIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createContext(FlatBufferBuilder builder,
      int userIdOffset,
      int sessionIdOffset) {
    builder.startTable(2);
    Context.addSessionId(builder, sessionIdOffset);
    Context.addUserId(builder, userIdOffset);
    return Context.endContext(builder);
  }

  public static void startContext(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addUserId(FlatBufferBuilder builder, int userIdOffset) { builder.addOffset(0, userIdOffset, 0); }
  public static void addSessionId(FlatBufferBuilder builder, int sessionIdOffset) { builder.addOffset(1, sessionIdOffset, 0); }
  public static int endContext(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Context get(int j) { return get(new Context(), j); }
    public Context get(Context obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

