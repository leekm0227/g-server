// automatically generated by the FlatBuffers compiler, do not modify

package com.leegm.common.protocol;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Item extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Item __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long templateId() { return (long)bb.getInt(bb_pos + 0) & 0xFFFFFFFFL; }
  public long amount() { return (long)bb.getInt(bb_pos + 4) & 0xFFFFFFFFL; }

  public static int createItem(FlatBufferBuilder builder, long templateId, long amount) {
    builder.prep(4, 8);
    builder.putInt((int)amount);
    builder.putInt((int)templateId);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Item get(int j) { return get(new Item(), j); }
    public Item get(Item obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

